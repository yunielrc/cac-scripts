#!/usr/bin/env bash

# Configures GATEWAY alpine server
# GATEWAY ⇆ MIDDLE-SERVER ⇆ END-SERVER

set -euEo pipefail
shopt -s expand_aliases

set -a
[[ -f .env ]] && . .env
[[ -f .env.local ]] && . .env.local
set +a

readonly VPN_BYPASS_INTERNET_IP='208.67.222.222'
readonly INTERNET_IP='208.67.220.220'

ssh_params='-o BatchMode=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
# shellcheck disable=SC2139
alias ssh="ssh ${ssh_params}"
# shellcheck disable=SC2139
alias scp="scp ${ssh_params}"

[[ -z "${TMP_DIR:-}" ]] && TMP_DIR=/tmp/triumvirate-ssvpn
# : "${TMP_DIR:=/tmp/triumvirate-ssvpn}"
[[ -d "$TMP_DIR" ]] || mkdir -p "$TMP_DIR"

configure_gateway_alpine() {
  #
  # Upload files
  #
  scp -r ./upload/gateway "${GATEWAY_USER}@${GATEWAY_IP}:/tmp"

  #
  # Copies middle-server.ovpn profile from local to gateway
  #
  copy_dir="/home/${GATEWAY_USER}"
  [ "$GATEWAY_USER" = root ] && copy_dir=/root

  scp "$MIDDLE_SERVER_OVPN_PROFILE_LOCAL_PATH" \
    "${GATEWAY_USER}@${GATEWAY_IP}:${copy_dir}"

  # shellcheck disable=2087
  ssh "${GATEWAY_USER}@${GATEWAY_IP}" <<-SSHEOF
    set -euo pipefail

    #
    #  Configures Timezone
    #
    setup-timezone -z America/Havana

    #
    #  Configures Network
    #
    readonly nic="\$(ip r | grep '^default' | cut -d' ' -f5)"
    cat <<-EOF >/etc/network/interfaces
auto lo
iface lo inet loopback

iface \${nic} inet static
  address ${GATEWAY_IP}/24
  gateway ${GATEWAY_GATEWAY_IP}
EOF
    # echo 1.1.1.1 >/etc/resolv.conf

    # For some reason network interface isn't starting at startup
    # adds nic openrc init script
    cat <<-'EOF' >/etc/init.d/nic-start
#!/sbin/openrc-run
# shellcheck disable=SC2034

description="nic start stop service"

readonly nic=eth0

depend() {
  need net
}

start() {
 ebegin "Starting network interface \${nic}"
 ifup "\$nic"
 eend \$?
}

stop() {
 ebegin "Stopping network interface \${nic}"
 ifdown "\$nic"
 eend \$?
}
EOF
    chmod +x /etc/init.d/nic-start
    rc-update add nic-start

    #
    # Installs & configures shadowsocks client (sslocal)
    #

    ## downloads and installs sslocal
    (
      cd "\$(mktemp -d)"
      wget -qO - "\$(wget -qO - 'https://api.github.com/repos/shadowsocks/shadowsocks-rust/releases/latest' | grep -om 1 'https://.*shadowsocks.*x86_64-unknown-linux-musl.tar.xz')" | tar xJf -
      mv sslocal /usr/bin

      wget -qO - "\$(wget -qO - 'https://api.github.com/repos/shadowsocks/v2ray-plugin/releases/latest' | grep -om 1 'https://.*v2ray-plugin-linux-amd64-.*.tar.gz')" | tar xzf -
      mv v2ray-plugin_linux_amd64 /usr/bin/v2ray-plugin

      rm ./*
    )
    ## adds sslocal config
    mkdir /etc/sslocal
    cat <<-'EOF' >/etc/sslocal/config.json
{
  "server": "${MIDDLE_SERVER_IP}",
  "server_port": ${MIDDLE_SERVER_SS_PORT},
  "local_address": "0.0.0.0",
  "local_port": 1080,
  "password": "${MIDDLE_SERVER_SS_PASSWORD}",
  "timeout": 300,
  "method": "aes-256-gcm",
  "plugin": "v2ray-plugin"
}
EOF
    ## adds sslocal openrc init script
    cat <<-'EOF' >/etc/init.d/sslocal
#!/sbin/openrc-run

name="\$SVCNAME"
command="/usr/bin/\$SVCNAME"
command_args='-c /etc/sslocal/config.json'
command_args_background="-d --daemonize-pid /var/run/\${SVCNAME}.pid"
pidfile="/var/run/\${SVCNAME}.pid"

depend() {
  need net
  use nic-start
  after firewall
}
EOF
    chmod +x /etc/init.d/sslocal
    ## adds sslocal service
    rc-update add sslocal

    #
    # Installs & configure openvpn client
    #

    apk add openvpn -U
    modprobe tun
    echo tun >>/etc/modules-load.d/tun.conf
    echo 'net.ipv4.ip_forward=1' >/etc/sysctl.d/99-gateway.conf
    sysctl -p /etc/sysctl.d/99-gateway.conf

    ## adds openvpn-client-sslocal config

    cat <<-'EOF' >>~/"${MIDDLE_SERVER_OPENVPN_CLIENT_NAME}.ovpn"

#
# Allows direct outcoming traffic
#

# vpn bypass ip
route ${VPN_BYPASS_INTERNET_IP}	255.255.255.255	 net_gateway

# CU ip ranges
route 41.194.23.160	255.255.255.240	 net_gateway
route 57.74.110.0	255.255.254.0	 net_gateway
route 57.91.32.0	255.255.240.0	 net_gateway
route 152.206.0.0	255.254.0.0	 net_gateway
route 169.158.0.0	255.255.0.0	 net_gateway
route 181.225.224.0	255.255.224.0	 net_gateway
route 190.6.64.0	255.255.224.0	 net_gateway
route 190.15.144.0	255.255.240.0	 net_gateway
route 190.92.112.0	255.255.240.0	 net_gateway
route 190.98.130.0	255.255.255.224	 net_gateway
route 190.107.0.0	255.255.240.0	 net_gateway
route 200.0.16.0	255.255.255.0	 net_gateway
route 200.0.24.0	255.255.252.0	 net_gateway
route 200.5.12.0	255.255.252.0	 net_gateway
route 200.13.144.0	255.255.248.0	 net_gateway
route 200.14.48.0	255.255.248.0	 net_gateway
route 200.55.128.0	255.255.192.0	 net_gateway
route 201.220.192.0	255.255.224.0	 net_gateway

# VE ip ranges
route 190.205.96.0        255.255.240.0  net_gateway

# secure.etecsa.net
route 10.180.0.30      255.255.255.255  net_gateway

# Custom gateways
${GATEWAY_OVPN_CLIENT_PROFILE_CUSTOM:-''}
EOF

    mkdir -p /etc/openvpn/client
    mv ~/"${MIDDLE_SERVER_OPENVPN_CLIENT_NAME}.ovpn" \
      /etc/openvpn/client/openvpn-client-sslocal.conf

    ## adds openvpn-client-sslocal openrc init script
    cat <<-'EOF' >/etc/init.d/openvpn-client-sslocal
#!/sbin/openrc-run

name="\$SVCNAME"
command='/usr/sbin/openvpn'
command_args='--suppress-timestamps --nobind --config /etc/openvpn/client/openvpn-client-sslocal.conf'
command_args_background="--daemon \${SVCNAME} --writepid /var/run/\${SVCNAME}.pid"
pidfile="/var/run/\${SVCNAME}.pid"

depend() {
  need net
  use nic-start
  use sslocal
  after firewall
}
EOF
    chmod +x /etc/init.d/openvpn-client-sslocal
    ## adds openvpn-client-sslocal service
    rc-update add openvpn-client-sslocal

    #
    # Installs & Configures openvpn-client-sslocal-doctor
    #
    (
      cd /tmp/gateway/openvpn-client-sslocal-doctor

      cat <<-EOF >/etc/openvpn-client-sslocal-doctor.env
INTERNET_IP='${INTERNET_IP}'
MIDDLE_SERVER_IP='${MIDDLE_SERVER_IP}'
VPN_BYPASS_INTERNET_IP='${VPN_BYPASS_INTERNET_IP}'
EOF
      sh install-alpine
    )

    #
    # Installs dnsmasq
    #
    apk add dnsmasq

    ## adds dnsmasq config
    cp -v /etc/dnsmasq.conf /etc/dnsmasq.conf.bak
    cat <<-'EOF' >/etc/dnsmasq.conf
cache-size=1000
domain-needed
bogus-priv
log-queries
no-hosts
no-resolv
strict-order
server=1.0.0.1
server=1.1.1.1
# server=/cu/200.55.128.250
# server=/cu/200.55.128.130
server=/cu/181.225.231.110
server=/cu/181.225.231.120
server=/etecsa.net/181.225.231.110
server=/etecsa.net/181.225.231.120
EOF
    dnsmasq --test

    ## adds & start dnsmasq service
    rc-update add dnsmasq

    #
    # Installs vpn gateway iptables
    #
    (
      cd /tmp/gateway/vpn-router-iptable-rules

      cat <<-EOF >/etc/vpn-router-iptable-rules.env
VRIR_NETWORK=${GATEWAY_NETWORK}
VRIR_INPUT_NIC=\$(ip r | grep '^default' | cut -d' ' -f5)
VRIR_OUTPUT_NIC=tun0
EOF
      sh install-alpine
    )

    #
    # Installs optional apps
    #
    # apk add bmon htop bat vim

    #
    # Start & Restart services
    #
    rc-service nic-start start
    rc-service dnsmasq start
    rc-service sslocal start
    rc-service openvpn-client-sslocal start
    rc-service vpn-router-iptable-rules start
    # rc-service networking restart
SSHEOF

  echo '>> GATEWAY-SERVER configured'
}

main() {
  configure_gateway_alpine
}

# on_exit() {
#   rm -r "$TMP_DIR"
# }
# trap on_exit INT TERM EXIT

if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
  main "$@"
fi
